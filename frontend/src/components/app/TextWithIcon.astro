---
import { strCapitalized } from '../../utils/strCapitalized';
import ArrowRightUp from './icons/ArrowRightUp.astro';

interface Props {
	text: string;
	dark?: boolean;
	animation?: boolean;
	small?: boolean;
}

const { text, dark, animation, small }: Props = Astro.props;
---

<div
	class="text-container"
	class:list={[{ dark, animation, small }]}
>
	<p>
		{strCapitalized(text)}
	</p>
	<div class="icon-container">
		<span class="icon">
			<ArrowRightUp />
		</span>
		<span class="icon-2">
			<ArrowRightUp />
		</span>
	</div>
</div>

<style scoped>
	.text-container {
		width: fit-content;
		display: flex;
		align-items: center;
		gap: 4px;
		position: relative;
	}

	p {
		width: fit-content;
		font-size: 1.2rem;

		transition: color 0.3s ease;
	}

	p::after {
		content: '';
		position: absolute;
		left: 0;
		right: 0;
		bottom: 14px;
		height: 1px;
		width: calc(100% - 19px);
		background-color: var(--contrast-color);
		transform: scaleX(0);
		transition: transform 0.3s ease;
		transform-origin: left;
	}

	.icon-container {
		position: relative;
		display: grid;
		place-content: center;
		width: 15px;
		height: 15px;
		padding-top: 5px;
		background-color: var(--background-color);
		transform: scale(0.8);
		overflow: hidden;
	}

	.icon {
		width: fit-content;
		transition: transform 0.3s ease;
	}

	.icon-2 {
		position: absolute;
		bottom: -1.4rem;
		left: -1rem;
		width: fit-content;
		transition: transform 0.3s ease;
	}

	.dark .icon-container {
		background-color: var(--contrast-color);
	}

	.small p {
		font-size: var(--font-small);
		color: var(--contrast-color-hover);
	}

	.small .icon-container .icon,
	.small .icon-container .icon-2 {
		color: var(--contrast-color-hover);
	}

	.dark p::after {
		background-color: var(--background-color);
	}

	.animation:hover p::after {
		transform: scaleX(1);
	}

	.animation:hover .icon-container .icon,
	.animation:hover .icon-container .icon-2 {
		transform: translateY(-55%) translateX(50%);
	}
</style>
